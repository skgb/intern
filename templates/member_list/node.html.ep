% layout 'intern1';
% title $person->name;
% use 5.016;

<h2><%= title %></h2>

<pre>
% my $has_primary_email = scalar $person->primary_emails;
% my $i_am_an_intern1_user = $person->legacy_user && $has_primary_email && $person->node_id == $self->skgb->session->user->node_id;
% my $has_skgb_email = $person->legacy_user && $has_primary_email && $person->membership && $person->membership->{status_long} ne 'Nichtmitglied';
Handle für Permalink:  <%= $person->legacy_user ? auth_link_to person => $person->legacy_user, {entity => $person->legacy_user} : "" %><%== $i_am_an_intern1_user ? "  (= Benutzername für <a href=http://intern1.skgb.de/>SKGB-intern 1</a>)" : "" %>
% my $skgbEmail = $has_skgb_email ? $person->legacy_user . "\@skgb.de" : "";
% my $skgbEmailHref = $skgbEmail ? " href=mailto:$skgbEmail" : "";
SKGB–E-Mail–Adresse:   <a<%= $skgbEmailHref %>><%= $skgbEmail %></a>
informelle Anrede<%= $person->_property('salutation') ? "" : " (automatisch)" %>:  <%= $person->name_salutation %>

Mitgliedsstatus:  <%= $person->membership->{status_long} %>
% my $may_payment_data = $self->app->mode ne 'development' || $self->skgb->may('payment-data') || $person->handle eq $self->skgb->session->user->handle;
Jahresbeitrag:  <%= $may_payment_data ? ($person->_property('debitBase') || 0) . " €" : "🔒" %>
Lastschriftmandate:   <%= $may_payment_data ? scalar @$mandates ? join ', ', @$mandates : "keine" : "🔒" %>
Debitorenstammnummer:  <%= $may_payment_data ? $person->_property('debitorSerial') : "🔒" %>
% my $gsVereinLink = $person->gs_verein_id && ($person->gs_verein_id le '396' || $person->gs_verein_id =~ m/^Gast/) ? $c->url_for('paradox', entity => $person->handle) : undef;
% my $gsVereinExplanation = $gsVereinLink ? $self->skgb->may('mojo:paradox') ? "" : "Rechte nicht ausreichend für GS-Verein" : "nicht in GS-Verein";
GS-Verein-Nummer / MNr-alt:  <%= $person->gs_verein_id %>  <input type=button value="in GS-Verein anzeigen" <%== ! $gsVereinExplanation ? "onclick=\"document.location.href='$gsVereinLink'\"" : "disabled title=\"$gsVereinExplanation\"" %>>
Eintritt:  <%= $person->membership->{joined} && $person->membership->{joined} eq '1967-09-01' ? 'Gründungsmitglied 1967' : $person->membership->{joined} %>
Austritt:  <%= $person->membership->{leaves} || ( $person->membership->{joined} ? '–' : '' ) %>

<!--Geschlecht:  <%= $person->_property('gender') %>
-->Geboren:  <%= $person->_property('born') ? ( (substr $person->_property('born'), 0, 7) . '  (Alter: ' . (length $person->_property('born') > 4 ? '' : 'ca. ') . $person->age . ' Jahre)' ) : '' %>
Beruf/Branche (Hobbys):  <%= $person->_property('skills') %>
beteiligt sich am Vereinsleben (GS-Verein–„Aktiv“):  <%= defined $person->membership->{status} ? $person->membership->{regular} ? 'ja' : 'nein' : '' %>

eigene Boote:
% foreach my $boat (@$boats) {
%  my $class = $boat->{class};
%  $class = $boat->{comment} if ! $class && ! $boat->{mark};
<%= $class %> <span style="text-transform: uppercase"><%= $boat->{mark} %></span> (<%= $boat->{_berth} ? "Liegeplatz: " . ($boat->{_berth} eq 'W' ? "auf der Jollenwiese" : $boat->{_berth} eq 'U' ? "umgedreht auf dem Steg" : $boat->{_berth}) : "kein Liegeplatz" %>)
%#=  dumper $boat
% }
<%= "keine\n" if ! scalar @$boats;

%>
Vereinsschlüssel:
% foreach my $key (@$clubkeys) {
<%= $key->{_nr} && "Nr. $key->{_nr} " %><%= $key->{since} ? "(seit $key->{since}) " : "" %><%= $key->{deposit} ? "gegen $key->{deposit} $key->{currency}" : "ohne" %> Pfand<%= $key->{returned} && " (zurückgegeben, Pfandrückzahlung noch nicht erfolgt)" %><%= $key->{comment} && " ($key->{comment})" %>
%#=  dumper $key
% }
<%= "ohne\n" if ! scalar @$clubkeys;

%>
Kontaktdaten:
% foreach my $address (@$addresses) {
%  $address->{address} =~ s/\n/, /g;
%  if ($address->{type}) {
%   $address->{type} =~ s/street|email//;
%   $address->{type} =~ s/phone/Tel/;
%   $address->{type} =~ s/mobile/mobil/;
%   $address->{type} =~ s/fax/Fax/;
%  }
<%= "$address->{address}"
%><%= $address->{type} ? " $address->{type}" : ""
%><%= $address->{primary} ? " (primär)" : ""
%><%= $address->{kind} ? " ($address->{kind})" : ""
%><%= $address->{comment} ? " ($address->{comment})" : ""
%>
%#=  dumper $address
% }
<%= "keine\n" if ! scalar @$addresses;

# TODO:
# http://microformats.org/wiki/hcard

%>
Bekannte Beziehungen zu anderen Personen:
% my $user = $self->skgb->session->user;
% foreach my $related (@$all_related) {
%  my $profile_url = url_for('mglpage');
%  $profile_url = $profile_url->query(node => $related->{person}->node_id) unless $related->{person}->equals($user);
%  my @type = ();
%  @type = ($related->{relation}->type) if $related->{direct};
%  push @type, sort keys %{$related->{related_through}} if $related->{indirect};
%#= dumper $related
%  my $type = join ', ', @type;
%  if ($type =~ m/COLLECTOR/) {
%   my $signed = $related->{relation}->get_property('signed') || '';
%   $signed = substr $signed, 0, 7;
%   $type =~ s/COLLECTOR/COLLECTOR ($signed)/ if $signed;
%  }
%  $type =~ s/PARENT/sorgeberechtigt/ if $related->{forward};
%  $type =~ s/PARENT/sorgeberechtigt für/ if ! $related->{forward};
%  $type =~ s/COLLECTOR/darf abgeholt werden von/ if $related->{forward};
%  $type =~ s/COLLECTOR/darf abholen/ if ! $related->{forward};
%  $type =~ s/Address/Kontaktdaten/;
%  $type =~ s/Mandate/Zahlungsdaten/;
%  $type =~ s/Boat/Trainingsgruppe/ if $person->membership->{status} =~ m/^Jugend/;
%  $type =~ s/Boat/Boot/ if $person->membership->{status} !~ m/^Jugend/;
<%= auth_link_to person => $related->{person}->name, {entity => $related->{person}->handle} %>: <%= $type %>
% }
<%= "keine\n" if ! scalar @$all_related;

%>
</pre>

<hr>
<p><strong>Warnung.</strong> Diese Seite <%= $person->gs_verein_id && $person->gs_verein_id gt '396' ? "zeigt" : "wurde automatisch aus einem Export aus GS-Verein erzeugt. Sie zeigt auch" %> wegen der noch nicht abgeschlossenen Entwicklung von SKGB-intern 2 nicht unbedingt alle zu dieser Person gespeicherten Daten. Es ist außerdem gut möglich, dass Angaben <%= $person->gs_verein_id && $person->gs_verein_id gt '396' ? "noch" : "veraltet," %> unvollständig oder falsch sind.
